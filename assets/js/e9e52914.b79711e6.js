"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[631],{6510:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(6010),l=t(7294);const r={verb:"verb_Nwub",path:"path_stP6",post:"post_PxBq",delete:"delete_r1td",get:"get_DBE8",put:"put_QdXb",patch:"patch_xPbH"},i=e=>{const{verb:n,path:t}=e;return l.createElement("div",null,l.createElement("span",{className:(0,a.Z)(r.verb,r[n.toLowerCase()])},n),l.createElement("span",{className:r.path},t))}},930:(e,n,t)=>{t.d(n,{Z:()=>b});var a=t(7294),l=t(814),r=t(7462),i=t(6010),s=t(2389),p=t(7392),m=t(7094),o=t(2466);const u="tabList__CuJ",d="tabItem_LNqP";function c(e){var n;const{lazy:t,block:l,defaultValue:s,values:c,groupId:k,className:g}=e,h=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),N=c??h.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),b=(0,p.l)(N,((e,n)=>e.value===n.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===s?s:s??(null==(n=h.find((e=>e.props.default)))?void 0:n.props.value)??h[0].props.value;if(null!==v&&!N.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${N.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:y}=(0,m.U)(),[C,T]=(0,a.useState)(v),w=[],{blockElementScrollPositionUntilNextRender:E}=(0,o.o5)();if(null!=k){const e=f[k];null!=e&&e!==C&&N.some((n=>n.value===e))&&T(e)}const Z=e=>{const n=e.currentTarget,t=w.indexOf(n),a=N[t].value;a!==C&&(E(n),T(a),null!=k&&y(k,String(a)))},_=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{const n=w.indexOf(e.currentTarget)+1;t=w[n]??w[0];break}case"ArrowLeft":{const n=w.indexOf(e.currentTarget)-1;t=w[n]??w[w.length-1];break}}null==(n=t)||n.focus()};return a.createElement("div",{className:(0,i.Z)("tabs-container",u)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":l},g)},N.map((e=>{let{value:n,label:t,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:C===n?0:-1,"aria-selected":C===n,key:n,ref:e=>w.push(e),onKeyDown:_,onFocus:Z,onClick:Z},l,{className:(0,i.Z)("tabs__item",d,null==l?void 0:l.className,{"tabs__item--active":C===n})}),t??n)}))),t?(0,a.cloneElement)(h.filter((e=>e.props.value===C))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},h.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==C})))))}function k(e){const n=(0,s.Z)();return a.createElement(c,(0,r.Z)({key:String(n)},e))}const g="tabItem_Ymn6";function h(e){let{children:n,hidden:t,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(g,l),hidden:t},n)}const N={curl:"cURL",javascript:"JavaScript / TypeScript"},b=e=>{const{children:n}=e,t=n.map((e=>{const n=e.props.children.props;return{language:n.className.replace("language-",""),code:n.children}}));return a.createElement(k,{groupId:"tabbed-code-block"},t.map((e=>a.createElement(h,{value:e.language,label:N[e.language]},a.createElement(l.Z,{language:e.language},e.code)))))}},6164:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>p,default:()=>c,frontMatter:()=>s,metadata:()=>m,toc:()=>u});var a=t(7462),l=(t(7294),t(3905)),r=t(6510),i=t(930);const s={title:"Name Change Endpoints",sidebar_position:2},p=void 0,m={unversionedId:"names-api/name-endpoints",id:"names-api/name-endpoints",title:"Name Change Endpoints",description:"Related Endpoints",source:"@site/docs/names-api/name-endpoints.mdx",sourceDirName:"names-api",slug:"/names-api/name-endpoints",permalink:"/names-api/name-endpoints",draft:!1,editUrl:"https://github.com/wise-old-man/wise-old-man/tree/master/docs/docs/names-api/name-endpoints.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Name Change Endpoints",sidebar_position:2},sidebar:"sidebar",previous:{title:"Name Change Types & Entities",permalink:"/names-api/name-type-definitions"},next:{title:"Efficiency API",permalink:"/category/efficiency-api"}},o={},u=[{value:"Related Endpoints",id:"related-endpoints",level:2},{value:"Search Name Changes",id:"search-name-changes",level:2},{value:"Submit Name Change",id:"submit-name-change",level:2},{value:"Get Name Change Details",id:"get-name-change-details",level:2}],d={toc:u};function c(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"related-endpoints"},"Related Endpoints"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/players-api/player-endpoints#get-player-name-changes"},"Players - Get Player Name Changes")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/groups-api/group-endpoints#get-group-name-changes"},"Groups - Get Group Name Changes"))),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"search-name-changes"},"Search Name Changes"),(0,l.kt)(r.Z,{verb:"GET",path:"/names",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Searches for name changes that match a name and/or status filter. Returns an array of ",(0,l.kt)("a",{parentName:"p",href:"/names-api/name-type-definitions#object-name-change"},"NameChange")," objects."),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"username"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The partial username for the player you're trying to search for.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"status"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/names-api/name-type-definitions#enum-name-change-status"},"NameChangeStatus")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The status to filter the results by.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"limit"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The pagination limit. See ",(0,l.kt)("a",{parentName:"td",href:"/#pagination"},"Pagination"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"offset"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The pagination offset. See ",(0,l.kt)("a",{parentName:"td",href:"/#pagination"},"Pagination"))))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(i.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/names?username=zezi&status=pending&limit=2 \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient, NameChangeStatus } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst nameChanges = await client.nameChanges.searchNameChanges(\n  { username: 'zezi', status: NameChangeStatus.PENDING },\n  { limit: 2 }\n);\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "id": 122524,\n    "playerId": 534993,\n    "oldName": "iicyc",\n    "newName": "ZezimaNite",\n    "status": "pending",\n    "resolvedAt": null,\n    "updatedAt": "2022-10-13T18:01:17.159Z",\n    "createdAt": "2022-10-13T18:01:17.159Z"\n  },\n  {\n    "id": 33296,\n    "playerId": 63821,\n    "oldName": "Zezime54",\n    "newName": "zezi1meme",\n    "status": "pending",\n    "resolvedAt": null,\n    "updatedAt": "2021-10-25T11:50:31.581Z",\n    "createdAt": "2021-10-25T11:50:31.581Z"\n  }\n]\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"submit-name-change"},"Submit Name Change"),(0,l.kt)(r.Z,{verb:"POST",path:"/names",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Submits a name change request between two usernames (old and new). Returns a (pending) ",(0,l.kt)("a",{parentName:"p",href:"/names-api/name-type-definitions#object-name-change"},"NameChange")," object."),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Body Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"oldName"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},'The player\'s "previous" username.')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"newName"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},'The player\'s "new" username.')))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(i.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X POST https://api.wiseoldman.net/v2/names \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "oldName": "psikoi",\n    "newName": "zezima",\n  }\'\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst newNameChange = await client.nameChanges.submitNameChange('psikoi', 'zezima');\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 63421,\n  "playerId": 2,\n  "oldName": "psikoi",\n  "newName": "zezima",\n  "status": "pending",\n  "resolvedAt": null,\n  "updatedAt": "2022-10-25T11:50:31.581Z",\n  "createdAt": "2022-10-25T11:50:31.581Z"\n}\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get-name-change-details"},"Get Name Change Details"),(0,l.kt)(r.Z,{verb:"GET",path:"/names/:id",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Gets details on a specific name change request. Returns a ",(0,l.kt)("a",{parentName:"p",href:"/names-api/name-type-definitions#object-name-change-details"},"NameChangeDetails")," object."),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The name change's ID.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(i.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/names/123 \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst nameChangeDetails = await client.nameChanges.getNameChangeDetails(123);\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "nameChange": {\n    "id": 123,\n    "playerId": 202807,\n    "oldName": "psikoi",\n    "newName": "zezima",\n    "status": "pending",\n    "resolvedAt": null,\n    "updatedAt": "2022-10-30T19:04:04.848Z",\n    "createdAt": "2022-10-30T19:04:04.847Z"\n  },\n  "data": {\n    "isNewOnHiscores": true,\n    "isOldOnHiscores": false,\n    "isNewTracked": true,\n    "hasNegativeGains": false,\n    "timeDiff": 50812212711,\n    "hoursDiff": 14114.503530833335,\n    "ehpDiff": 11.807679999999891,\n    "ehbDiff": 0,\n    "oldStats": {\n      "id": 16445235,\n      "playerId": 202807,\n      "createdAt": "2021-03-21T16:05:48.284Z",\n      "importedAt": null,\n      "data": {\n        "skills": {\n          "overall": {\n            "metric": "overall",\n            "experience": 2312022,\n            "rank": 55336,\n            "level": 864\n          }\n          // ... etc for all skills\n        },\n        "bosses": {\n          "abyssal_sire": {\n            "metric": "abyssal_sire",\n            "kills": -1,\n            "rank": -1\n          }\n          // ... etc for all bosses\n        },\n        "activities": {\n          "bounty_hunter_hunter": {\n            "metric": "bounty_hunter_hunter",\n            "score": -1,\n            "rank": -1\n          }\n          // ... etc for all activities\n        },\n        "computed": {\n          "ehp": {\n            "metric": "ehp",\n            "value": 45.20698,\n            "rank": 131673\n          }\n          // ... etc for all computed metrics\n        }\n      }\n    },\n    "newStats": {\n      "id": 68362915,\n      "playerId": 788983,\n      "createdAt": "2022-10-30T18:36:00.995Z",\n      "importedAt": null,\n      "data": {\n        "skills": {\n          "overall": {\n            "metric": "overall",\n            "experience": 3194246,\n            "rank": 56732,\n            "level": 1036\n          }\n          // ... etc for all skills\n        },\n        "bosses": {\n          "abyssal_sire": {\n            "metric": "abyssal_sire",\n            "kills": -1,\n            "rank": -1\n          }\n          // ... etc for all bosses\n        },\n        "activities": {\n          "bounty_hunter_hunter": {\n            "metric": "bounty_hunter_hunter",\n            "score": -1,\n            "rank": -1\n          }\n          // ... etc for all activities\n        },\n        "computed": {\n          "ehp": {\n            "metric": "ehp",\n            "value": 43.41906000000017,\n            "rank": 1\n          }\n          // ... etc for all computed metrics\n        }\n      }\n    }\n  }\n}\n')),(0,l.kt)("hr",null))}c.isMDXComponent=!0}}]);